

# create a few variables like "volume_image_file_exists"
- name: Add image facts to hostvars
  hosts: aaphub
  become: true
  gather_facts: false
  roles:
    - name: "check for existing images"
      role: nick.platform.libvirt_image_facts
      delegate_to: "{{ groups['hypervisor'][0] }}"
      
# If there is no base file, assume configuration didn't complete and 
# we are good to go again.
- name: Configure new server machine
  hosts: aaphub
  become: true
  gather_facts: false
  serial: 1
  vars_files:
    - ~/vault-credentials.yml
  environment:
    http_proxy: "http://gateway.{{ lab_domain }}:3128"
    HTTPS_PROXY: "http://gateway.{{ lab_domain }}:3128"
    no_proxy: localhost,127.0.0.1,example.com
  #
  pre_tasks:
    - name: "If base image exists, stop play here"
      ansible.builtin.meta: end_host
      when: volume_base_file_exists
    - ansible.builtin.setup:
  #
  roles:
    - role: nick.platform.managed_node
    - name: "update /etc/hosts with gateway address"
      role: nick.platform.hosts_record
      # !!! hardcoded
      vars:
        h_ip_address: "{{ lab_net_prefix }}.3"
        h_fqdn: "gateway.{{ lab_domain }}"
        h_host: gateway
    - role: nick.platform.server_cert
    - role: nick.platform.dns_client_of_id
    - role: nick.platform.dns_record
      vars:
        # Create a DNS A record like "aaphub IN A 192.168.123.45"
        # Create a DNS PTR record like "45 IN PTR aaphub.build.example.com."
        record_a_name: "{{ inventory_hostname | regex_replace( '.' + lab_domain) }}"
        record_a_value: "{{ nics[0]['ip'] }}"
        record_ptr_name: "{{ nics[0]['ip'].split('.')[3] }}"
        record_ptr_value: "{{ inventory_hostname + '.' }}"
    - role: nick.platform.satellite_repo_consumer
    # - role: nick.platform.cdn_repo_consumer
    #   vars:
    #     server_proxy_hostname: "gateway.{{ lab_domain }}"
    #     server_proxy_port: 3128
    - role: nick.platform.latest_packages
    - role: nick.platform.insights_client
