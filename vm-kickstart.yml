---
# Create a new virtual machine using libvirt.
# Install and configure the OS using a kickstart file.

# create a few variables like "volume_image_file_exists"
- name: Add image facts to hostvars
  hosts: "{{ host_to_build }}"
  become: true
  gather_facts: false
  roles:
    - name: "check for existing images"
      role: nick.platform.libvirt_image_facts
      delegate_to: "{{ groups['hypervisor'][0] }}"


# If there already is an image file, don't trash it. 
- name: Kickstart a new machine
  hosts: "{{ host_to_build }}"
  become: true
  gather_facts: false
  serial: 1
  vars_files:
    - ~/vault-credentials.yml
  pre_tasks:
    - name: "If VM image exists, stop play here"
      meta: end_host
      when: volume_image_file_exists
  roles:
    - name: "kickstart the VM on hypervisor {{ groups['hypervisor'][0] }}"
      role: nick.platform.libvirt_machine_kickstart
      delegate_to: "{{ groups['hypervisor'][0] }}"
  tasks:
    - name: There is now an image file
      set_fact:
        volume_image_file_exists: true


- name: Find and start new server machine
  hosts: "{{ host_to_build }}"
  become: true
  gather_facts: false
  serial: 1
  roles:
    - name: "update /etc/hosts on install host {{ groups['install_host'][0] }}"
      role: nick.platform.hosts_record
      vars:
        h_ip_address: "{{ nics[0]['ip'] }}"
        h_fqdn: "{{ fqdn }}"
        h_host: "{{ host }}"
      delegate_to: "{{ groups['install_host'][0] }}"
    # !!! install_host or hypervisor? 
    - name: "run machine (it stops after install)"
      role: nick.platform.libvirt_machine_start
      delegate_to: "{{ groups['install_host'][0] }}"
      when: volume_image_file_exists
