---
# !!! move to collection roles

# a simpler version of the far superior 
# https://github.com/sscheib/ansible_satellite
#
# manually created subscription allocation
# https://access.redhat.com/management/subscription_allocations/db350766-32e5-4713-8789-d40dfbe9c969
# subscription allocation can be created using API
# https://access.redhat.com/solutions/6981907
# How to create subscription allocation using the RHSM API?

- name: Satellite config 
  hosts: satellite
  gather_facts: true  # required for the role redhat.satellite_operations.installer
  become: true  # required for the role redhat.satellite_operations.installer
  vars_files:
    - ~/vault-credentials.yml
  environment:
    http_proxy: "http://gateway.{{ lab_domain }}:3128"
    HTTPS_PROXY: "http://gateway.{{ lab_domain }}:3128"
    no_proxy: localhost,127.0.0.1,example.com

  pre_tasks:
    - name: Create proxy
      redhat.satellite.http_proxy:
        server_url: "{{ sat_server_url }}"
        username: "{{ sat_admin_user }}"
        password: "{{ sat_admin_pass }}"
        name: gateway
        url: "http://gateway.{{ lab_domain }}:3128"
        locations:
          - "{{ sat_location }}"
        organizations:
          - "{{ sat_organization }}"
        state: present

  roles:
      # These values are set in host_vars.
        # satellite_server_url: "{{ sat_server_url }}"
        # satellite_username: "{{ sat_admin_user }}"
        # satellite_password: "{{ sat_admin_pass }}"
        # satellite_organization: "{{ sat_organization }}"

    - role: redhat.satellite.settings
      vars:
        satellite_settings:
          - name: content_default_http_proxy
            value: gateway

      # 4
      # https://console.redhat.com/ansible/automation-hub/repo/published/redhat/satellite/content/role/manifest/
    - role: redhat.satellite.manifest
      vars:
        satellite_manifest_path: "~/manifest.zip"
        satellite_manifest_download: true
        satellite_rhsm_username: "{{ rhsm_user }}"
        satellite_rhsm_password: "{{ rhsm_password }}"
        satellite_manifest_uuid: "db350766-32e5-4713-8789-d40dfbe9c969"

      # 6
    - role: redhat.satellite.repositories
      vars:
        satellite_products: "{{ sat_products }}"

      # 12
      # content views
      # https://github.com/sscheib/ansible_satellite/blob/main/host_vars/satellite.office.int.scheib.me/11b_content_views.yml
    - role: redhat.satellite.content_views
      vars:
        # Define Content Views of Red Hat Products
        sat_content_views:
          - name: 'cv-rhcdn-base-rhel-8'
            lifecycle_environments: "{{ satellite_lifecycle_environments | map(attribute='name') }}"
            repositories:
              - name: 'Red Hat Enterprise Linux 8 for x86_64 - BaseOS RPMs 8'
                product: 'Red Hat Enterprise Linux for x86_64'

              - name: 'Red Hat Enterprise Linux 8 for x86_64 - AppStream RPMs 8'
                product: 'Red Hat Enterprise Linux for x86_64'

              - name: 'Red Hat Enterprise Linux 8 for x86_64 - BaseOS Kickstart 8.8'
                product: 'Red Hat Enterprise Linux for x86_64'

              - name: 'Red Hat Enterprise Linux 8 for x86_64 - AppStream Kickstart 8.8'
                product: 'Red Hat Enterprise Linux for x86_64'

          - name: 'cv-rhcdn-base-rhel-9'
            lifecycle_environments: "{{ satellite_lifecycle_environments | map(attribute='name') }}"
            repositories:
              - name: 'Red Hat Enterprise Linux 9 for x86_64 - BaseOS RPMs 9'
                product: 'Red Hat Enterprise Linux for x86_64'

              - name: 'Red Hat Enterprise Linux 9 for x86_64 - AppStream RPMs 9'
                product: 'Red Hat Enterprise Linux for x86_64'

              - name: 'Red Hat Enterprise Linux 9 for x86_64 - BaseOS Kickstart 9.2'
                product: 'Red Hat Enterprise Linux for x86_64'

              - name: 'Red Hat Enterprise Linux 9 for x86_64 - AppStream Kickstart 9.2'
                product: 'Red Hat Enterprise Linux for x86_64'

          - name: 'cv-rhcdn-satellite_6_client-rhel-8'
            repositories:
              - name: 'Red Hat Satellite Client 6 for RHEL 8 x86_64 RPMs'
                product: 'Red Hat Enterprise Linux for x86_64'

          - name: 'cv-rhcdn-satellite_6_client-rhel-9'
            repositories:
              - name: 'Red Hat Satellite Client 6 for RHEL 9 x86_64 RPMs'
                product: 'Red Hat Enterprise Linux for x86_64'

          - name: 'cv-rhcdn-ansible_automation_platform-rhel-8'
            lifecycle_environments: []
            repositories:
              - name: 'Red Hat Ansible Automation Platform 2.3 for RHEL 8 x86_64 RPMs'
                product: 'Red Hat Ansible Automation Platform'

          - name: 'cv-rhcdn-ansible_automation_platform-rhel-9'
            lifecycle_environments: []
            repositories:
              - name: 'Red Hat Ansible Automation Platform 2.3 for RHEL 9 x86_64 RPMs'
                product: 'Red Hat Ansible Automation Platform'


  tasks:

      # 7
    # https://console.redhat.com/ansible/automation-hub/repo/published/redhat/satellite/content/module/repository_sync/
    # better to wait or to do as async background job?
    # https://github.com/sscheib/ansible_satellite/blob/main/07_satellite_sync_repositories.yml
    - name: "Sync all repositories in each product"
      redhat.satellite.repository_sync:
        server_url: "{{ sat_server_url }}"
        username: "{{ sat_admin_user }}"
        password: "{{ sat_admin_pass }}"
        organization: "{{ sat_organization }}"
        product: "{{ item }}"
      loop: "{{ sat_products | map(attribute='name') | unique }}"

      # 8
      # https://console.redhat.com/ansible/automation-hub/repo/published/redhat/satellite/content/module/sync_plan/
      # usng a dynamically set date (relative to now) means this is always changed, never OK (unchanged). 
    - name: "Create daily sync plan for all products"
      redhat.satellite.sync_plan:
        server_url: "{{ sat_server_url }}"
        username: "{{ sat_admin_user }}"
        password: "{{ sat_admin_pass }}"
        organization: "{{ sat_organization }}"
        name: "Daily Sync"
        interval: "daily"    #  hourly, daily, weekly, custom cron
        enabled: true
        # sync_date: "{{ lookup('ansible.builtin.pipe', 'date +\"%Y-%m-%d %H:%M:%S %Z\"') }}"  # now
        # sync_date: "2017-01-01 00:00:00 UTC" # fixed date
        sync_date: "{{ lookup('ansible.builtin.pipe', 'date +\"%Y-%m-%d 10:00:00 %Z\" -d \"+1 day\"') }}"  # 10am tomorrow
        products: "{{ sat_products | map(attribute='name') | list }}"
        state: present


